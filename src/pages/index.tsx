/* eslint-disable @typescript-eslint/restrict-template-expressions */
/* eslint-disable @typescript-eslint/no-non-null-assertion */
/* eslint-disable @typescript-eslint/no-explicit-any */
/* eslint-disable @typescript-eslint/no-unsafe-member-access */
/* eslint-disable @typescript-eslint/no-unsafe-assignment */
import { type NextPage } from "next";
import Head from "next/head";

import { api } from "@/utils/api";
import Image from "next/image";
import { useState } from "react";
import { useRouter } from "next/router";

const Home: NextPage = () => {
  const { data, isLoading } = api.tweets.getTweets.useQuery();

  if (isLoading) {
    return <div>loading...</div>;
  }

  if (!data?.tweets) {
    return <div>no tweet here</div>;
  }

  return (
    <>
      <Head>
        <title>Meowtter</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <div className="flex flex-col items-center justify-center">
        <Image src={"/logo.png"} width={300} height={75} alt="logo" />
        <Post />
      </div>
      <main className="flex min-h-screen flex-col items-center  bg-slate-200 px-4">
        {data.tweets.map((tweet: any) => {
          return (
            <Tweet
              content={tweet.content}
              author={tweet.author}
              key={tweet.id}
            />
          );
        })}
      </main>
    </>
  );
};

export default Home;

function Tweet(props: any) {
  return (
    <div className=" my-2 flex w-full items-center justify-start rounded-xl bg-white md:lg:w-96">
      <Image
        src={`/${props.author}.png`}
        height={250}
        width={250}
        alt=""
        className="h-24 w-24 rounded-full p-2"
      />
      <div className="flex flex-col p-2">
        <p className="text-slate-400">@{props.author}</p>
        <p className="">{props.content}</p>
      </div>
    </div>
  );
}

function Post() {
  const router = useRouter();

  function randomIntFromInterval(min: number, max: number) {
    // min and max included
    return Math.floor(Math.random() * (max - min + 1) + min);
  }

  const [content, setContent] = useState("");

  const authors = ["garfield", "tom", "hellokitty", "sylvester", "pussinboots"];

  const mutation = api.tweets.postTweet.useMutation();

  function handlePost() {
    const rndInt = randomIntFromInterval(1, 4);
    const author = authors[rndInt];

    mutation.mutate({ author: author!, content: content });
    router.reload();
  }

  return (
    <div className=" my-4 rounded-2xl bg-white">
      <input
        type={"text"}
        className={"h-32 w-48 border rounded-xl mr-4"}
        max={40}
        min={1}
        placeholder={"Scrivi il tuo tweet qui"}
        onChange={(e) => setContent(e.target.value)}
      />
      <input
        type={"button"}
        value={"miagola"}
        onClick={() => handlePost()}
        className={"bg-blue-400 text-white p-2 rounded-xl"}
      />
    </div>
  );
}
